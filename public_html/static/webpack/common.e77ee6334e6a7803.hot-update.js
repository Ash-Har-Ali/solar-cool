"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("common",{

/***/ "(app-pages-browser)/./sanity/env.ts":
/*!***********************!*\
  !*** ./sanity/env.ts ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiVersion: function() { return /* binding */ apiVersion; },\n/* harmony export */   dataset: function() { return /* binding */ dataset; },\n/* harmony export */   projectId: function() { return /* binding */ projectId; },\n/* harmony export */   useCdn: function() { return /* binding */ useCdn; }\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/process/browser.js\");\nconst apiVersion = process.env.NEXT_PUBLIC_SANITY_API_VERSION || \"2024-01-22\";\nconst dataset = assertValue(\"production\", \"Missing environment variable: NEXT_PUBLIC_SANITY_DATASET\");\nconst projectId = assertValue(\"evhyl6ba\", \"Missing environment variable: NEXT_PUBLIC_SANITY_PROJECT_ID\");\nconst useCdn = false;\nfunction assertValue(v, errorMessage) {\n    if (v === undefined) {\n        throw new Error(errorMessage);\n    }\n    return v;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3Nhbml0eS9lbnYudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBTyxNQUFNQSxhQUNYQyxPQUFPQSxDQUFDQyxHQUFHLENBQUNDLDhCQUE4QixJQUFJLGFBQVk7QUFFckQsTUFBTUMsVUFBVUMsWUFDckJKLFlBQXNDLEVBQ3RDLDREQUNEO0FBRU0sTUFBTU0sWUFBWUYsWUFDdkJKLFVBQXlDLEVBQ3pDLCtEQUNEO0FBRU0sTUFBTVEsU0FBUyxNQUFLO0FBRTNCLFNBQVNKLFlBQWVLLENBQWdCLEVBQUVDLFlBQW9CO0lBQzVELElBQUlELE1BQU1FLFdBQVc7UUFDbkIsTUFBTSxJQUFJQyxNQUFNRjtJQUNsQjtJQUVBLE9BQU9EO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc2FuaXR5L2Vudi50cz8xNmRiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBhcGlWZXJzaW9uID1cclxuICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TQU5JVFlfQVBJX1ZFUlNJT04gfHwgJzIwMjQtMDEtMjInXHJcblxyXG5leHBvcnQgY29uc3QgZGF0YXNldCA9IGFzc2VydFZhbHVlKFxyXG4gIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NBTklUWV9EQVRBU0VULFxyXG4gICdNaXNzaW5nIGVudmlyb25tZW50IHZhcmlhYmxlOiBORVhUX1BVQkxJQ19TQU5JVFlfREFUQVNFVCdcclxuKVxyXG5cclxuZXhwb3J0IGNvbnN0IHByb2plY3RJZCA9IGFzc2VydFZhbHVlKFxyXG4gIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NBTklUWV9QUk9KRUNUX0lELFxyXG4gICdNaXNzaW5nIGVudmlyb25tZW50IHZhcmlhYmxlOiBORVhUX1BVQkxJQ19TQU5JVFlfUFJPSkVDVF9JRCdcclxuKVxyXG5cclxuZXhwb3J0IGNvbnN0IHVzZUNkbiA9IGZhbHNlXHJcblxyXG5mdW5jdGlvbiBhc3NlcnRWYWx1ZTxUPih2OiBUIHwgdW5kZWZpbmVkLCBlcnJvck1lc3NhZ2U6IHN0cmluZyk6IFQge1xyXG4gIGlmICh2ID09PSB1bmRlZmluZWQpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcihlcnJvck1lc3NhZ2UpXHJcbiAgfVxyXG5cclxuICByZXR1cm4gdlxyXG59XHJcbiJdLCJuYW1lcyI6WyJhcGlWZXJzaW9uIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1NBTklUWV9BUElfVkVSU0lPTiIsImRhdGFzZXQiLCJhc3NlcnRWYWx1ZSIsIk5FWFRfUFVCTElDX1NBTklUWV9EQVRBU0VUIiwicHJvamVjdElkIiwiTkVYVF9QVUJMSUNfU0FOSVRZX1BST0pFQ1RfSUQiLCJ1c2VDZG4iLCJ2IiwiZXJyb3JNZXNzYWdlIiwidW5kZWZpbmVkIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./sanity/env.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./sanity/lib/client.ts":
/*!******************************!*\
  !*** ./sanity/lib/client.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   client: function() { return /* binding */ client; }\n/* harmony export */ });\n/* harmony import */ var next_sanity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-sanity */ \"(app-pages-browser)/./node_modules/next-sanity/dist/client.js\");\n/* harmony import */ var _env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../env */ \"(app-pages-browser)/./sanity/env.ts\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/process/browser.js\");\n\n\n// Use the write token from environment variables\nconst client = (0,next_sanity__WEBPACK_IMPORTED_MODULE_1__.createClient)({\n    apiVersion: _env__WEBPACK_IMPORTED_MODULE_0__.apiVersion,\n    dataset: _env__WEBPACK_IMPORTED_MODULE_0__.dataset,\n    projectId: _env__WEBPACK_IMPORTED_MODULE_0__.projectId,\n    useCdn: _env__WEBPACK_IMPORTED_MODULE_0__.useCdn,\n    token: process.env.SANITY_WRITE_TOKEN\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3Nhbml0eS9saWIvY2xpZW50LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkM7QUFDcUI7QUFFaEUsaURBQWlEO0FBQzFDLE1BQU1LLFNBQVNMLHlEQUFZQSxDQUFDO0lBQ2pDQyxVQUFVQSw4Q0FBQUE7SUFDVkMsT0FBT0EsMkNBQUFBO0lBQ1BDLFNBQVNBLDZDQUFBQTtJQUNUQyxNQUFNQSwwQ0FBQUE7SUFDTkUsT0FBT0MsT0FBT0EsQ0FBQ0MsR0FBRyxDQUFDQyxrQkFBa0I7QUFDdkMsR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zYW5pdHkvbGliL2NsaWVudC50cz83N2FiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gJ25leHQtc2FuaXR5JztcclxuaW1wb3J0IHsgYXBpVmVyc2lvbiwgZGF0YXNldCwgcHJvamVjdElkLCB1c2VDZG4gfSBmcm9tICcuLi9lbnYnO1xyXG5cclxuLy8gVXNlIHRoZSB3cml0ZSB0b2tlbiBmcm9tIGVudmlyb25tZW50IHZhcmlhYmxlc1xyXG5leHBvcnQgY29uc3QgY2xpZW50ID0gY3JlYXRlQ2xpZW50KHtcclxuICBhcGlWZXJzaW9uLFxyXG4gIGRhdGFzZXQsXHJcbiAgcHJvamVjdElkLFxyXG4gIHVzZUNkbixcclxuICB0b2tlbjogcHJvY2Vzcy5lbnYuU0FOSVRZX1dSSVRFX1RPS0VOLCAvLyBTZWN1cmVseSBsb2FkIHRoZSB0b2tlblxyXG59KTtcclxuIl0sIm5hbWVzIjpbImNyZWF0ZUNsaWVudCIsImFwaVZlcnNpb24iLCJkYXRhc2V0IiwicHJvamVjdElkIiwidXNlQ2RuIiwiY2xpZW50IiwidG9rZW4iLCJwcm9jZXNzIiwiZW52IiwiU0FOSVRZX1dSSVRFX1RPS0VOIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./sanity/lib/client.ts\n"));

/***/ })

});